斷詞+取關鍵字規則

****用關鍵字爬蟲
if subtopic in ['美職']:
        stop_pos = set(['Neu','Neqa','Nh','Nep','Nd']) # 詞性不保留
        stop_word = set(['MLB','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['中職']:
        stop_pos = set(['Nep', 'Nh', 'Neqa','Ncd','Nd','Neu']) #詞性不保留
        stop_word = set(['中職','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['棒球']:
        stop_pos = set(['Neu', 'Nh', 'Neqa','Nep','Nd']) # 詞性不保留
        stop_word = set(['影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['日職']:
        stop_pos = set(['Neqa','Nf','Neu','Ng','Ncd','Nh','Nep','Nd']) # 詞性不保留
        stop_word = set(['日職','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['韓職']:
        stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd']) # 詞性不保留
        stop_word = set(['影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['中信兄弟','味全龍','統一獅','樂天桃猿','富邦悍將','台鋼雄鷹']:
        stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd']) # 詞性不保留
        stop_word = set(['中職','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['MLB 洋基','MLB 紅襪','MLB 光芒','MLB 金鶯','MLB 藍鳥','MLB 守護者','MLB 白襪','MLB 皇家','MLB 老虎','MLB 雙城','MLB 太空人','MLB 運動家','MLB 水手','MLB 天使','MLB 遊騎兵','MLB 大都會','MLB 勇士','MLB 費城人','MLB 馬林魚','MLB 國民','MLB 釀酒人','MLB 紅雀','MLB 紅人','MLB 小熊','MLB 海盜','MLB 響尾蛇','MLB 道奇','MLB 落磯','MLB 巨人','MLB 教士']:
        stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd','Ncd']) # 
        stop_word = set(['MLB','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}") 
    elif subtopic in ['NBA']:
        stop_pos = set(['Neu','Neqa','Nh','Nep','Nd']) # 詞性不保留
        stop_word = set(['NBA','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['T1']:
        stop_pos = set(['Neu','Neqa','Nh','Nep','Nd']) # 詞性不保留
        stop_word = set(['T1','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['PLG']:
        stop_pos = set(['Neu','Neqa','Nh','Nep','Nd']) # 詞性不保留
        stop_word = set(['PLG','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['金州勇士',"波士頓塞爾蒂克","布魯克林籃網","紐約尼克","費城76人","多倫多暴龍","芝加哥公牛","克里夫蘭騎士",
                      "底特律活塞","印第安那溜馬","密爾瓦基公鹿","亞特蘭大老鷹","夏洛特黃蜂","邁阿密熱火","奧蘭多魔術","華盛頓巫師",
                      "洛杉磯快艇","洛杉磯湖人","鳳凰城太陽","沙加緬度國王","丹佛金塊","明尼蘇達灰狼","奧克拉荷馬雷霆","波特蘭拓荒者",
                      "猶他爵士","達拉斯獨行俠","休士頓火箭","曼斐斯灰熊","紐奧良鵜鶘","聖安東尼奧馬刺",]:
        stop_pos = set(['Nh','Nep','VH','VK','VC']) # 詞性不保留
        stop_word = set(['NBA','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['新北國王','臺北富邦勇士','桃園璞園領航猿','福爾摩沙台新夢想家','高雄17直播鋼鐵人','新竹街口攻城獅']:
        stop_pos = set(['Nh','Nep','VH','VK','VC']) # 詞性不保留
        stop_word = set(['PLG','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['新北中信特攻','臺南台鋼獵鷹','高雄全家海神','台灣啤酒英熊','臺中太陽','桃園永豐雲豹']:
        stop_pos = set(['Nh','Nep','VH','VHC','VC']) # 詞性不保留
        stop_word = set(['T1','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['足球']:
        stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd','Ncd']) # 
        stop_word = set(['足球','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") #or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['排球']:
        stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd','Ncd']) # 
        stop_word = set(['排球','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") #or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
    elif subtopic in ['田徑']:
        stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd','Ncd']) # 
        stop_word = set(['田徑','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") #or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")   
    elif subtopic in ['氣象']:
        stop_pos = set(['Neu','Nf']) # 
        stop_word = set(['準氣象','氣象','快訊','影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
                # 只留名詞
                is_N_or_V = pos.startswith("N") #or pos.startswith("V")
                # 去掉名詞裡的某些詞性
                is_not_stop_pos = pos not in stop_pos
                # 去掉"中職"這個詞
                is_not_stop_word = ws not in stop_word
                # 只剩一個字的詞也不留
                is_not_one_charactor = len(ws) != 1
                # 組成串列
                if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                    short_with_pos.append(f"{ws}({pos})")
                    short_sentence.append(f"{ws}")
                    
                    
 *****用URL爬蟲                   
                    
                    
if subtopic in ['棒球']:
        stop_pos = set(['Neu', 'Nh', 'Neqa','Nep','Nd']) # 詞性不保留
        stop_word = set(['影','圖']) # 停用詞
        for ws, pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = pos.startswith("N") #or pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = pos not in stop_pos
            # 去掉"中職"這個詞
            is_not_stop_word = ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = len(ws) != 1
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
                short_with_pos.append(f"{ws}({pos})")
                short_sentence.append(f"{ws}")
    elif subtopic in ['籃球','網球','高爾夫球']:
        stop_pos = set(["Nd",'Neu','Nes','Nh']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['美食消費']:
        stop_pos = set(["Nd",'Neu','Nes','Nh','V_2','Nf','Ncd']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['旅遊交通']:  
        stop_pos = set(['Neu','Nep','Nh']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['文教']: 
        stop_pos = set([]) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['兩性親子']: 
        stop_pos = set(['Neu','Nd','Neqa']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['新奇']:
        stop_pos = set(['Ng']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            #is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}") 
    elif subtopic in ['亞澳', '中港澳', '歐非', '美洲']: 
        stop_pos = set(['Ncd','Neu','Neqa']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['日韓娛樂']:
        stop_pos = set(['Neqa','Neu','VJ','Nf']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}") 
    elif subtopic in ['藝人動態']:
        stop_pos = set(['Neu','VF','Nh','Ng']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['音樂']: 
        stop_pos = set(['Neu','Neqa','Ng']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}")
    elif subtopic in ['電影戲劇','大台北', '北台灣','中部離島', '南台灣', '東台灣','科技新知', '遊戲相關', '3C家電', '手機iOS', '手機Android','養生飲食', '癌症', '塑身減重', '慢性病']: 
        stop_pos = set(['Neu','Neqa']) # 
        stop_word = set(['影','圖']) # 停用詞
        for word_ws, word_pos in zip(sentence_ws, sentence_pos):
            # 只留名詞和動詞
            is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
            # 去掉名詞裡的某些詞性
            is_not_stop_pos = word_pos not in stop_pos
            # 去掉停用詞
            is_not_stop_word = word_ws not in stop_word
            # 只剩一個字的詞也不留
            #is_not_one_charactor = not (len(word_ws) == 1)
            # 組成串列
            if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
                short_with_pos.append(f"{word_ws}({word_pos})")
                short_sentence.append(f"{word_ws}") 
