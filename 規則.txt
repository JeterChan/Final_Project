斷詞+取關鍵字規則

中職:
def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Nep', 'Nh', 'Neqa','Ncd','Nd','Neu']) #詞性不保留
  stop_word = set(['中職','影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉"中職"這個詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
 
 
棒球:
 def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Neu', 'Nh', 'Neqa',''Nep','Nd']) # 詞性不保留
  stop_word = set(['影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉停用詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word and is_not_one_charactor:
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
  
美職:
 def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Neu','Neqa','Nh','Nep','Nd']) # 詞性不保留
  stop_word = set(['MLB','影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉停用詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    #is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
 
日職:
def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Neqa','Nf','Neu','Ng','Ncd,'Nh','Nep','Nd']) # 詞性不保留
  stop_word = set(['日職','影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉停用詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    #is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
  
韓職:
def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd']) # 詞性不保留
  stop_word = set(['影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉停用詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    #is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
  
中信兄弟、味全龍、統一獅、樂天桃猿、富邦悍將、台鋼雄鷹:
def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd']) # 詞性不保留
  stop_word = set(['中職','影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉停用詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    #is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
 
洋基、紅襪、金鶯、藍鳥、守護者、白襪、皇家、雙城、太空人、運動家、水手、天使、遊騎兵、大都會、勇士、費城人、馬林魚、國民、酒人、紅雀、紅人、小熊、海盜、響尾蛇、道奇、落磯、巨人、教士:
def clean(sentence_ws, sentence_pos):
  short_with_pos = []
  short_sentence = []
  stop_pos = set(['Neu','Nf','Nh','Ng','Nes','Nep','Neqa','Nd','Ncd']) # 
  stop_word = set(['MLB','影','圖']) # 停用詞
  for word_ws, word_pos in zip(sentence_ws, sentence_pos):
    # 只留名詞和動詞
    is_N_or_V = word_pos.startswith("N") #or word_pos.startswith("V") 
    # 去掉名詞裡的某些詞性
    is_not_stop_pos = word_pos not in stop_pos
    # 去掉停用詞
    is_not_stop_word = word_ws not in stop_word
    # 只剩一個字的詞也不留
    #is_not_one_charactor = not (len(word_ws) == 1)
    # 組成串列
    if is_N_or_V and is_not_stop_pos and is_not_stop_word : #and is_not_one_charactor
      short_with_pos.append(f"{word_ws}({word_pos})")
      short_sentence.append(f"{word_ws}")
  return (" ".join(short_sentence), " ".join(short_with_pos))
  
